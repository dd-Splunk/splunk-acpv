---
name: "package-app"

on:
  push:
    branches:
      - main
jobs:
  tagged-release:
    name: "Package App"
    runs-on: "ubuntu-latest"

    steps:
      # ...
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create spl
        run: |
          mv app ${APP_NAME}
          COPYFILE_DISABLE=1 tar -cvzf ${APP_NAME}.spl ${APP_NAME}
        env:
          APP_NAME: ${{ github.event.repository.name }}
      # - name: Release spl.
      #   uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: false
      #     files: |
      #       *.spl
      - name: Release SPL
        uses: robinraju/release-downloader@v1.7
        with:
          # The source repository path.
          # Expected format {owner}/{repo}
          # Default: ${{ github.repository }}
          # repository: ${{ github.repository }}

          # A flag to set the download target as latest release
          # The default value is 'false'
          latest: true

          # The github tag. e.g: v1.0.1
          # Download assets from a specific tag/version
          tag: ""

          # The release id to download files from
          releaseId: ""

          # The name of the file to download.
          # Use this field only to specify filenames other than tarball or zipball, if any.
          # Supports wildcard pattern (eg: '*', '*.deb', '*.zip' etc..)
          fileName: "*.spl"

          # Download the attached tarball (*.tar.gz)
          tarBall: false

          # Download the attached zipball (*.zip)
          zipBall: false

          # Relative path under $GITHUB_WORKSPACE to place the downloaded file(s)
          # It will create the target directory automatically if not present
          # eg: out-file-path: "my-downloads" => It will create directory $GITHUB_WORKSPACE/my-downloads
          out-file-path: ""

          # Github access token to download files from private repositories
          # https://docs.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets
          # eg: token: ${{ secrets.MY_TOKEN }}
          token: "${{ secrets.GITHUB_TOKEN }}"

          # The URL of the Github API, only use this input if you are using Github Enterprise
          # Default: "https://api.github.com"
          # Use http(s)://[hostname]/api/v3 to access the API for GitHub Enterprise Server
          github-api-url: ""
